#!/usr/bin/with-contenv bash

USER_NAME=${USER_NAME:-linuxserver.io}
HOME_DIR=/home/"$USER_NAME"
echo "User name is set to $USER_NAME, home dir is $HOME_DIR"

# create folders
mkdir -p \
    "$HOME_DIR"/{.ssh,ssh_host_keys,logs/openssh}

sed -i "s/su linuxserver.io linuxserver.io/su ${USER_NAME} ${USER_NAME}/g" /etc/logrotate.d/openssh

# set password for abc to unlock it and set sudo access
sed -i "/${USER_NAME} ALL.*/d" /etc/sudoers
if [ "$SUDO_ACCESS" == "true" ]; then
    if [ -n "$USER_PASSWORD" ] || [ -n "$USER_PASSWORD_FILE" -a -f "$USER_PASSWORD_FILE" ]; then
        echo "${USER_NAME} ALL=(ALL) ALL" >> /etc/sudoers
        echo "Sudo is enabled with password."
    else
        echo "${USER_NAME} ALL=(ALL) NOPASSWD: ALL" >> /etc/sudoers
        echo "Sudo is enabled without password."
    fi
else
    echo "Sudo is disabled."
fi
[[ -n "$USER_PASSWORD_FILE" ]] && [[ -f "$USER_PASSWORD_FILE" ]] && \
    USER_PASSWORD=$(cat "$USER_PASSWORD_FILE") && \
    echo "User password is retrieved from file."
USER_PASSWORD=${USER_PASSWORD:-$(< /dev/urandom tr -dc _A-Z-a-z-0-9 | head -c${1:-8};echo;)}
echo "${USER_NAME}:${USER_PASSWORD}" | chpasswd

# symlink out ssh config directory
if [ ! -L /etc/ssh ];then
    if [ ! -f "$HOME_DIR"/ssh_host_keys/sshd_config ]; then
        sed -i "/#PidFile/c\PidFile $HOME_DIR\/sshd.pid" /etc/ssh/sshd_config
        cp -a /etc/ssh/sshd_config "$HOME_DIR"/ssh_host_keys/
    fi
    rm -Rf /etc/ssh
    ln -s "$HOME_DIR"/ssh_host_keys /etc/ssh
    ssh-keygen -A
fi

# password access
if [ "$PASSWORD_ACCESS" == "true" ]; then
    sed -i '/^#PasswordAuthentication/c\PasswordAuthentication yes' /etc/ssh/sshd_config
    sed -i '/^PasswordAuthentication/c\PasswordAuthentication yes' /etc/ssh/sshd_config
    chown root:"${USER_NAME}" \
        /etc/shadow
    echo "User/password ssh access is enabled."
else
    sed -i '/^PasswordAuthentication/c\PasswordAuthentication no' /etc/ssh/sshd_config
    chown root:root \
        /etc/shadow
    echo "User/password ssh access is disabled."
fi

# set key auth in file
if [ ! -f "$HOME_DIR"/.ssh/authorized_keys ];then
    touch "$HOME_DIR"/.ssh/authorized_keys
fi

[[ -n "$PUBLIC_KEY" ]] && \
    [[ ! $(grep "$PUBLIC_KEY" "$HOME_DIR"/.ssh/authorized_keys) ]] && \
    echo "$PUBLIC_KEY" >> "$HOME_DIR"/.ssh/authorized_keys && \
    echo "Public key from env variable added"

[[ -n "$PUBLIC_KEY_FILE" ]] && [[ -f "$PUBLIC_KEY_FILE" ]] && \
    PUBLIC_KEY2=$(cat "$PUBLIC_KEY_FILE") && \
    [[ ! $(grep "$PUBLIC_KEY2" "$HOME_DIR"/.ssh/authorized_keys) ]] && \
    echo "$PUBLIC_KEY2" >> "$HOME_DIR"/.ssh/authorized_keys && \
    echo "Public key from file added"

# permissions
chown -R "${USER_NAME}":"${USER_NAME}" \
    "$HOME_DIR"
chmod go-w \
    "$HOME_DIR"
chmod 700 \
    "$HOME_DIR"/.ssh
chmod 600 \
    "$HOME_DIR"/.ssh/authorized_keys
